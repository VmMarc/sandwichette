import gulp from 'gulp';
import htmlmin from 'gulp-htmlmin';
import { exec } from 'node:child_process';
import { rm } from 'node:fs/promises';
import { compress, resize } from './image.js';

export async function clean() {
  await rm('../build', { recursive: true, force: true });
  await rm('../dist', { recursive: true, force: true });
}

export function html() {
  return gulp
    .src('../src/*.html')
    .pipe(
      htmlmin({
        collapseBooleanAttributes: true,
        collapseInlineTagWhitespace: true,
        collapseWhitespace: true,
        conservativeCollapse: true,
        customAttrCollapse: /srcset/,
        decodeEntities: true,
        includeAutoGeneratedTags: false,
        minifyURLs: true,
        preventAttributesEscaping: true,
        processConditionalComments: true,
        removeAttributeQuotes: true,
        removeComments: true,
        removeEmptyAttributes: true,
        removeOptionalTags: true,
        removeRedundantAttributes: true,
        removeScriptTypeAttributes: true,
        removeStyleLinkTypeAttributes: true,
        sortAttributes: true,
        sortClassName: true,
        trimCustomFragments: true,
        useShortDoctype: true,
      }),
    )
    .pipe(gulp.dest('../dist/'));
}

export function copyFonts() {
  return gulp.src(['../src/fonts/*.woff2']).pipe(gulp.dest('../dist/fonts/'));
}

export function copyStyles() {
  return gulp
    .src(['../src/styles/fontawesome/*.css'])
    .pipe(gulp.dest('../dist/styles/fontawesome/'));
}

export function tailwindcss() {
  return exec(
    'npx tailwindcss -c ../tailwind.config.js -i ../src/styles/global.css -o ../dist/styles/global.css --minify',
  );
}

export default gulp.series(
  clean,
  gulp.parallel(
    copyFonts,
    copyStyles,
    tailwindcss,
    html,
    gulp.series(compress, resize),
  ),
);
